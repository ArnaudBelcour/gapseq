#!/bin/bash

version=1.1

curdir=$(pwd)
path=$(readlink -f "$0")
dir=$(dirname "$path")

medium=$dir/dat/media/ALLmed.csv
verbose=0

usage()
{
    echo -e "   __ _  __ _ _ __  ___  ___  __ _ "
    echo -e "  / _\` |/ _\` | '_ \/ __|/ _ \/ _\` |"
    echo -e " | (_| | (_| | |_) \__ \  __/ (_| |"
    echo -e "  \__, |\__,_| .__/|___/\___|\__, |"
    echo -e "  |___/      |_|                |_|"
    echo -e "" 
    echo -e "Informed prediction and analysis of bacterial metabolic pathways and genome-scale networks"
    echo -e "\nUsage:"
    echo "  gapseq test"
    echo "  gapseq (find | find-transport | draft | fill | doall | adapt) (...)"
    echo "  gapseq doall (genome) [medium] [Bacteria|Archaea]"
    echo "  gapseq find (-p pathways | -e enzymes) [-b bitscore] (genome)"
    echo "  gapseq find-transport [-b bitscore] (genome)"
    echo "  gapseq draft (-r reactions | -t transporter -c genome -p pathways) [-b pos|neg|archaea|auto]"
    echo "  gapseq medium (-m draft -p pathways) [-c manual_fluxes - o output_file]"
    echo "  gapseq fill (-m draft -n medium -c rxn_weights -g rxn_genes)"
    echo "  gapseq adapt (add | remove) (reactions,pathways) (model)"
    echo -e "\nExamples:"
    echo "  gapseq test"
    echo "  gapseq doall toy/ecoli.fna.gz"
    echo "  gapseq doall toy/myb71.fna.gz dat/media/TSBmed.csv"
    echo "  gapseq find -p chitin toy/myb71.fna.gz"
    echo "  gapseq find -p all toy/myb71.fna.gz"
    echo "  gapseq find-transport toy/myb71.fna.gz"
    echo "  gapseq draft -r toy/ecoli-all-Reactions.tbl -t toy/ecoli-Transporter.tbl -c toy/ecoli.fna.gz -p toy/ecoli-all-Pathways.tbl"
    echo "  gapseq medium -m toy/ecoli-draft.RDS -p toy/ecoli-all-Pathways.tbl"
    echo "  gapseq fill -m toy/ecoli-draft.RDS -n dat/media/ALLmed.csv -c toy/ecoli-rxnWeights.RDS -g toy/ecoli-rxnXgenes.RDS"
    echo "  gapseq adapt add 14DICHLORBENZDEG-PWY toy/myb71.RDS"
    echo -e "\nOptions:"
    echo "  test            Testing dependencies and basic functionality of gapseq."
    echo "  find            Pathway analysis, try to find enzymes based on homology."
    echo "  find-transport  Search for transporters based on homology."
    echo "  draft           Draft model construction based on results from find and find-transport."
    echo "  medium          (gapfill-)Medium prediction based on results from find and draft"
    echo "  fill            Gap filling of a model."
    echo "  doall           Combine find, find-transport, draft, (medium,) and fill."
    echo "  adapt           Add or remove reactions or pathways."
    echo "  -v              Show version."
    echo "  -h              Show this screen."
    echo "  -n              Enable noisy verbose mode."
    exit 1
}

OPTIND=1
while getopts ":h?vm:n" opt; do
    case "$opt" in
        h|\?)
            usage
            exit 0
            ;;
        v)
            cd $dir
            git_rev=$(git rev-parse --short HEAD 2>/dev/null)
            echo gapseq version: $version $git_rev 
            exit 0
            ;;
        n)
            verbose=1
        esac
done
shift $((OPTIND-1))
[ "$1" = "--" ] && shift
[ "$#" -eq 0 ]  && usage

if   [ "$1" == "test" ]; then
    $dir/src/test.sh

elif   [ "$1" == "find" ]; then
    shift
    $dir/src/gapseq_find.sh "$@"

elif [ "$1" == "find-transport" ]; then
    shift
    $dir/src/transporter.sh "$@"
    
elif [ "$1" == "draft" ]; then
    shift
    Rscript $dir/src/generate_GSdraft.R "$@"
    
elif [ "$1" == "medium" ]; then
    shift
    Rscript $dir/src/predict_medium.R "$@"

elif [ "$1" == "fill" ]; then
    shift
    Rscript $dir/src/gf.suite.R "$@"

elif [ "$1" == "doall" ]; then
    parm=$(echo $@ | sed 's/doall//')
    file=$(readlink -f $2)
    base=$(basename "$file")
    id="${base%.*}"
    [[ ! -s "$file" ]]  && usage
    [[ $file == *.gz ]] && id="${id%.*}" 
    medium=${id}-medium.csv
    [[ -s "$3" ]]       && medium=$3
    taxonomy=auto
    [[ ("$3" == "Bacteria" || "$4" == "Bacteria") ]] && taxonomy=Bacteria
    [[ ("$3" == "Archaea" || "$4" == "Archaea") ]] && taxonomy=Archaea
    #$dir/src/gapseq_find.sh -v $verbose -b 200 -p all -t $taxonomy -k "$file"
    #$dir/src/transporter.sh -b 200 "$file"
    #Rscript $dir/src/generate_GSdraft.R -r "$id-all-Reactions.tbl" -t "$id-Transporter.tbl" -c "$file" -u 200 -l 100 -p "$id-all-Pathways.tbl"
    [[ ! -s "$3" ]] && Rscript $dir/src/predict_medium.R -m "./${id}-draft.RDS" -p "$id-all-Pathways.tbl"
    Rscript $dir/src/gf.suite.R -m "./${id}-draft.RDS" -n "$medium" -c "./${id}-rxnWeights.RDS" -b 100 -g "./${id}-rxnXgenes.RDS"

elif [ "$1" == "adapt" ]; then
    if [ "$2" == "add" ]; then
        Rscript $dir/src/adapt.R -a $3 -m $4
    elif [ "$2" == "remove" ]; then
        Rscript $dir/src/adapt.R -r $3 -m $4
    else
        usage
    fi

else
    usage
fi

